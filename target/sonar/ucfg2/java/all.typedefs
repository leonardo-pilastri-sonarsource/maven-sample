˛
java.lang.Object&
<init>()java.lang.Object#<init>()V5
clone()*java.lang.Object#clone()Ljava/lang/Object;J
equals(Ljava/lang/Object;),java.lang.Object#equals(Ljava/lang/Object;)Z*

finalize()java.lang.Object#finalize()V:

getClass(),java.lang.Object#getClass()Ljava/lang/Class;*

hashCode()java.lang.Object#hashCode()I&
notify()java.lang.Object#notify()V,
notifyAll()java.lang.Object#notifyAll()V;

toString()-java.lang.Object#toString()Ljava/lang/String;"
wait()java.lang.Object#wait()V$
wait(J)java.lang.Object#wait(J)V&
wait(JI)java.lang.Object#wait(JI)V&
wait0(J)java.lang.Object#wait0(J)Ví
org.example.Mainjava.lang.Object&
<init>()org.example.Main#<init>()VD
foo(Ljava/lang/Object;))org.example.Main#foo(Ljava/lang/Object;)D(
java.lang.Comparablejava.lang.Object0
java.lang.constant.Constablejava.lang.Object3
java.lang.constant.ConstantDescjava.lang.Object(
java.io.Serializablejava.lang.Object¿
java.lang.Numberjava.io.Serializablejava.lang.Object&
<init>()java.lang.Number#<init>()V,
byteValue()java.lang.Number#byteValue()B.
shortValue()java.lang.Number#shortValue()S«"
java.lang.Integerjava.lang.Comparablejava.lang.Numberjava.lang.constant.Constablejava.lang.constant.ConstantDesc)
	<init>(I)java.lang.Integer#<init>(I)VK
<init>(Ljava/lang/String;)-java.lang.Integer#<init>(Ljava/lang/String;)V-
bitCount(I)java.lang.Integer#bitCount(I)I-
byteValue()java.lang.Integer#byteValue()B-
compare(II)java.lang.Integer#compare(II)IS
compareTo(Ljava/lang/Integer;)1java.lang.Integer#compareTo(Ljava/lang/Integer;)I=
compareUnsigned(II)&java.lang.Integer#compareUnsigned(II)I/
compress(II)java.lang.Integer#compress(II)I]
decode(Ljava/lang/String;)?java.lang.Integer#decode(Ljava/lang/String;)Ljava/lang/Integer;P
describeConstable()9java.lang.Integer#describeConstable()Ljava/util/Optional;;
divideUnsigned(II)%java.lang.Integer#divideUnsigned(II)I1
doubleValue() java.lang.Integer#doubleValue()DK
equals(Ljava/lang/Object;)-java.lang.Integer#equals(Ljava/lang/Object;)Z+

expand(II)java.lang.Integer#expand(II)I/
floatValue()java.lang.Integer#floatValue()FG
formatUnsignedInt(II[BI)+java.lang.Integer#formatUnsignedInt(II[BI)VQ
formatUnsignedIntUTF16(II[BI)0java.lang.Integer#formatUnsignedIntUTF16(II[BI)V3
getChars(II[B)!java.lang.Integer#getChars(II[B)Ie
getInteger(Ljava/lang/String;)Cjava.lang.Integer#getInteger(Ljava/lang/String;)Ljava/lang/Integer;g
getInteger(Ljava/lang/String;I)Djava.lang.Integer#getInteger(Ljava/lang/String;I)Ljava/lang/Integer;ã
1getInteger(Ljava/lang/String;Ljava/lang/Integer;)Vjava.lang.Integer#getInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;+

hashCode()java.lang.Integer#hashCode()I-
hashCode(I)java.lang.Integer#hashCode(I)I7
highestOneBit(I)#java.lang.Integer#highestOneBit(I)I+

intValue()java.lang.Integer#intValue()I-
longValue()java.lang.Integer#longValue()J5
lowestOneBit(I)"java.lang.Integer#lowestOneBit(I)I%
max(II)java.lang.Integer#max(II)I%
min(II)java.lang.Integer#min(II)IE
numberOfLeadingZeros(I)*java.lang.Integer#numberOfLeadingZeros(I)IG
numberOfTrailingZeros(I)+java.lang.Integer#numberOfTrailingZeros(I)I9
parallelSuffix(I)$java.lang.Integer#parallelSuffix(I)Ia
%parseInt(Ljava/lang/CharSequence;III)8java.lang.Integer#parseInt(Ljava/lang/CharSequence;III)IO
parseInt(Ljava/lang/String;)/java.lang.Integer#parseInt(Ljava/lang/String;)IQ
parseInt(Ljava/lang/String;I)0java.lang.Integer#parseInt(Ljava/lang/String;I)Iq
-parseUnsignedInt(Ljava/lang/CharSequence;III)@java.lang.Integer#parseUnsignedInt(Ljava/lang/CharSequence;III)I_
$parseUnsignedInt(Ljava/lang/String;)7java.lang.Integer#parseUnsignedInt(Ljava/lang/String;)Ia
%parseUnsignedInt(Ljava/lang/String;I)8java.lang.Integer#parseUnsignedInt(Ljava/lang/String;I)IA
remainderUnsigned(II)(java.lang.Integer#remainderUnsigned(II)I°
<resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)ajava.lang.Integer#resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Integer;+

reverse(I)java.lang.Integer#reverse(I)I5
reverseBytes(I)"java.lang.Integer#reverseBytes(I)I3
rotateLeft(II)!java.lang.Integer#rotateLeft(II)I5
rotateRight(II)"java.lang.Integer#rotateRight(II)I/
shortValue()java.lang.Integer#shortValue()S)
	signum(I)java.lang.Integer#signum(I)I1
stringSize(I) java.lang.Integer#stringSize(I)I%
sum(II)java.lang.Integer#sum(II)IJ
toBinaryString(I)5java.lang.Integer#toBinaryString(I)Ljava/lang/String;D
toHexString(I)2java.lang.Integer#toHexString(I)Ljava/lang/String;H
toOctalString(I)4java.lang.Integer#toOctalString(I)Ljava/lang/String;<

toString().java.lang.Integer#toString()Ljava/lang/String;>
toString(I)/java.lang.Integer#toString(I)Ljava/lang/String;@
toString(II)0java.lang.Integer#toString(II)Ljava/lang/String;J
toStringUTF16(II)5java.lang.Integer#toStringUTF16(II)Ljava/lang/String;9
toUnsignedLong(I)$java.lang.Integer#toUnsignedLong(I)JN
toUnsignedString(I)7java.lang.Integer#toUnsignedString(I)Ljava/lang/String;P
toUnsignedString(II)8java.lang.Integer#toUnsignedString(II)Ljava/lang/String;R
toUnsignedString0(II)9java.lang.Integer#toUnsignedString0(II)Ljava/lang/String;=

valueOf(I)/java.lang.Integer#valueOf(I)Ljava/lang/Integer;_
valueOf(Ljava/lang/String;)@java.lang.Integer#valueOf(Ljava/lang/String;)Ljava/lang/Integer;a
valueOf(Ljava/lang/String;I)Ajava.lang.Integer#valueOf(Ljava/lang/String;I)Ljava/lang/Integer;⁄
java.lang.Floatjava.lang.Comparablejava.lang.Numberjava.lang.constant.Constablejava.lang.constant.ConstantDesc'
	<init>(D)java.lang.Float#<init>(D)V'
	<init>(F)java.lang.Float#<init>(F)VI
<init>(Ljava/lang/String;)+java.lang.Float#<init>(Ljava/lang/String;)V+
byteValue()java.lang.Float#byteValue()B+
compare(FF)java.lang.Float#compare(FF)IM
compareTo(Ljava/lang/Float;)-java.lang.Float#compareTo(Ljava/lang/Float;)IN
describeConstable()7java.lang.Float#describeConstable()Ljava/util/Optional;/
doubleValue()java.lang.Float#doubleValue()DI
equals(Ljava/lang/Object;)+java.lang.Float#equals(Ljava/lang/Object;)Z7
floatToIntBits(F)"java.lang.Float#floatToIntBits(F)I=
floatToRawIntBits(F)%java.lang.Float#floatToRawIntBits(F)I-
floatValue()java.lang.Float#floatValue()F)

hashCode()java.lang.Float#hashCode()I+
hashCode(F)java.lang.Float#hashCode(F)I7
intBitsToFloat(I)"java.lang.Float#intBitsToFloat(I)F)

intValue()java.lang.Float#intValue()I+
isFinite(F)java.lang.Float#isFinite(F)Z-
isInfinite()java.lang.Float#isInfinite()Z/
isInfinite(F)java.lang.Float#isInfinite(F)Z#
isNaN()java.lang.Float#isNaN()Z%
isNaN(F)java.lang.Float#isNaN(F)Z+
longValue()java.lang.Float#longValue()J#
max(FF)java.lang.Float#max(FF)F#
min(FF)java.lang.Float#min(FF)FQ
parseFloat(Ljava/lang/String;)/java.lang.Float#parseFloat(Ljava/lang/String;)Fù
<resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)]java.lang.Float#resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;-
shortValue()java.lang.Float#shortValue()S#
sum(FF)java.lang.Float#sum(FF)FB
toHexString(F)0java.lang.Float#toHexString(F)Ljava/lang/String;:

toString(),java.lang.Float#toString()Ljava/lang/String;<
toString(F)-java.lang.Float#toString(F)Ljava/lang/String;9

valueOf(F)+java.lang.Float#valueOf(F)Ljava/lang/Float;[
valueOf(Ljava/lang/String;)<java.lang.Float#valueOf(Ljava/lang/String;)Ljava/lang/Float;Â
java.lang.Doublejava.lang.Comparablejava.lang.Numberjava.lang.constant.Constablejava.lang.constant.ConstantDesc(
	<init>(D)java.lang.Double#<init>(D)VJ
<init>(Ljava/lang/String;),java.lang.Double#<init>(Ljava/lang/String;)V,
byteValue()java.lang.Double#byteValue()B,
compare(DD)java.lang.Double#compare(DD)IP
compareTo(Ljava/lang/Double;)/java.lang.Double#compareTo(Ljava/lang/Double;)IO
describeConstable()8java.lang.Double#describeConstable()Ljava/util/Optional;<
doubleToLongBits(D)%java.lang.Double#doubleToLongBits(D)JB
doubleToRawLongBits(D)(java.lang.Double#doubleToRawLongBits(D)J0
doubleValue()java.lang.Double#doubleValue()DJ
equals(Ljava/lang/Object;),java.lang.Double#equals(Ljava/lang/Object;)Z.
floatValue()java.lang.Double#floatValue()F*

hashCode()java.lang.Double#hashCode()I,
hashCode(D)java.lang.Double#hashCode(D)I*

intValue()java.lang.Double#intValue()I,
isFinite(D)java.lang.Double#isFinite(D)Z.
isInfinite()java.lang.Double#isInfinite()Z0
isInfinite(D)java.lang.Double#isInfinite(D)Z$
isNaN()java.lang.Double#isNaN()Z&
isNaN(D)java.lang.Double#isNaN(D)Z<
longBitsToDouble(J)%java.lang.Double#longBitsToDouble(J)D,
longValue()java.lang.Double#longValue()J$
max(DD)java.lang.Double#max(DD)D$
min(DD)java.lang.Double#min(DD)DT
parseDouble(Ljava/lang/String;)1java.lang.Double#parseDouble(Ljava/lang/String;)Dü
<resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)_java.lang.Double#resolveConstantDesc(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Double;.
shortValue()java.lang.Double#shortValue()S$
sum(DD)java.lang.Double#sum(DD)DC
toHexString(D)1java.lang.Double#toHexString(D)Ljava/lang/String;;

toString()-java.lang.Double#toString()Ljava/lang/String;=
toString(D).java.lang.Double#toString(D)Ljava/lang/String;;

valueOf(D)-java.lang.Double#valueOf(D)Ljava/lang/Double;]
valueOf(Ljava/lang/String;)>java.lang.Double#valueOf(Ljava/lang/String;)Ljava/lang/Double;ï
$org.example.Mainjava.lang.Object'
<init>()$org.example.Main#<init>()VE
foo(Ljava/lang/Object;)*$org.example.Main#foo(Ljava/lang/Object;)D